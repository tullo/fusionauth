apiVersion: v1
kind: Service
metadata:
  name: fusionauth
  labels:
    app.kubernetes.io/name: fusionauth
    app.kubernetes.io/instance: fusionauth-1.32.1
spec:
  type: LoadBalancer
  ports:
    - name: fusionauth
      port: 8080
      targetPort: 9011
  selector:
    app.kubernetes.io/name: fusionauth
    app.kubernetes.io/instance: fusionauth-1.32.1
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app.kubernetes.io/name: fusionauth
    app.kubernetes.io/instance: fusionauth-1.32.1
  name: fusionauth
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: fusionauth
      app.kubernetes.io/instance: fusionauth-1.32.1
  serviceName: fusionauth
  template:
    metadata:
      labels:
        app.kubernetes.io/name: fusionauth
        app.kubernetes.io/instance: fusionauth-1.32.1
      name: fusionauth
    spec:
      containers:
      - name: fusionauth
        image: docker.io/fusionauth/fusionauth-app:1.32.1
        ports:
        - containerPort: 9011
          protocol: TCP
        volumeMounts:
        - name: fa-data
          mountPath: /volumes/fa-data/config
      initContainers:
      - command:
        - sh
        - -c
        - chmod 777 /volumes/*
        image: busybox
        imagePullPolicy: IfNotPresent
        name: init-auth
        volumeMounts:
        - name: fa-data
          mountPath: /volumes/fa-data
      - command:
        - sh
        - -c
        - echo initializing volume... && (cp -Rv /usr/local/fusionauth/config /volumes/fa-data || true)
        image: docker.io/fusionauth/fusionauth-app:1.32.1
        imagePullPolicy: IfNotPresent
        name: init-volume-data
        volumeMounts:
        - name: fa-data
          mountPath: /volumes/fa-data
  volumeClaimTemplates:
  - apiVersion: v1
    kind: PersistentVolumeClaim
    metadata:
      name: fa-data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi
